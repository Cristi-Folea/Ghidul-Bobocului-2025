---
import Layout from "../layouts/Layout.astro";

const questions = [
  {
    text: "Ce culoare te reprezintă cel mai bine?",
    options: ["Roz", "Negru", "Alb", "Galben", "Verde", "Albastru"],
  },
  {
    text: "Ce fel de activitate te atrage cel mai mult?",
    options: [
      "Gătitul",
      "Petrecerea",
      "Visatul",
      "Relaxarea",
      "Aventura",
      "Ieșitul în oraș",
    ],
  },
  {
    text: "Care mediu te inspiră cel mai mult?",
    options: [
      "Casă primitoare",
      "Oraș gotic",
      "Vârf de munte",
      "Bibliotecă",
      "Parc verde",
      "Cafenea locală",
    ],
  },
  {
    text: "Ce trăsătură te definește?\n",
    options: [
      "Blândețea",
      "Rebeliunea",
      "Delicatețea",
      "Calmul",
      "Optimismul",
      "Sarcasmul",
    ],
  },
  {
    text: "Cum arată pentru tine prietenul ideal?",
    options: [
      "Îți gătește prăjituri",
      "Te provoacă cu umor",
      "Îți aduce aventură",
      "Îți oferă confort",
      "Te încurajează să riști",
      "Te ia peste picior cu glume",
    ],
  },
];

// Sistem de scoruri pentru fiecare tip de personalitate
const personalityScores = {
  "Hello Kitty": {
    // ÎNTREBAREA 1 - Culoare
    Roz: 3,
    Negru: 1,
    Alb: 2,
    Galben: 2,
    Verde: 2,
    Albastru: 1,

    // ÎNTREBAREA 2 - Activitate
    Gătitul: 3,
    Petrecerea: 1,
    Visatul: 2,
    Relaxarea: 2,
    Aventura: 2,
    "Ieșitul în oraș": 1,

    // ÎNTREBAREA 3 - Mediu
    "Casă primitoare": 3,
    "Oraș gotic": 1,
    "Vârf de munte": 2,
    Bibliotecă: 2,
    "Parc verde": 2,
    "Cafenea locală": 1,

    // ÎNTREBAREA 4 - Trăsătură
    Blândețea: 3,
    Rebeliunea: 1,
    Delicatețea: 2,
    Calmul: 2,
    Optimismul: 2,
    Sarcasmul: 1,

    // ÎNTREBAREA 5 - Prieten
    "Îți gătește prăjituri": 3,
    "Te provoacă cu umor": 1,
    "Îți aduce aventură": 2,
    "Îți oferă confort": 2,
    "Te încurajează să riști": 2,
    "Te ia peste picior cu glume": 1,
  },

  Kuromi: {
    // ÎNTREBAREA 1 - Culoare
    Roz: 1,
    Negru: 3,
    Alb: 1,
    Galben: 1,
    Verde: 1,
    Albastru: 2,

    // ÎNTREBAREA 2 - Activitate
    Gătitul: 1,
    Petrecerea: 3,
    Visatul: 1,
    Relaxarea: 1,
    Aventura: 2,
    "Ieșitul în oraș": 2,

    // ÎNTREBAREA 3 - Mediu
    "Casă primitoare": 1,
    "Oraș gotic": 3,
    "Vârf de munte": 1,
    Bibliotecă: 1,
    "Parc verde": 1,
    "Cafenea locală": 2,

    // ÎNTREBAREA 4 - Trăsătură
    Blândețea: 1,
    Rebeliunea: 3,
    Delicatețea: 1,
    Calmul: 1,
    Optimismul: 2,
    Sarcasmul: 2,

    // ÎNTREBAREA 5 - Prieten
    "Îți gătește prăjituri": 1,
    "Te provoacă cu umor": 3,
    "Îți aduce aventură": 1,
    "Îți oferă confort": 1,
    "Te încurajează să riști": 2,
    "Te ia peste picior cu glume": 2,
  },

  Cinnamoroll: {
    // ÎNTREBAREA 1 - Culoare
    Roz: 2,
    Negru: 1,
    Alb: 3,
    Galben: 2,
    Verde: 2,
    Albastru: 2,

    // ÎNTREBAREA 2 - Activitate
    Gătitul: 2,
    Petrecerea: 1,
    Visatul: 3,
    Relaxarea: 2,
    Aventura: 2,
    "Ieșitul în oraș": 1,

    // ÎNTREBAREA 3 - Mediu
    "Casă primitoare": 2,
    "Oraș gotic": 1,
    "Vârf de munte": 3,
    Bibliotecă: 2,
    "Parc verde": 2,
    "Cafenea locală": 1,

    // ÎNTREBAREA 4 - Trăsătură
    Blândețea: 2,
    Rebeliunea: 1,
    Delicatețea: 3,
    Calmul: 2,
    Optimismul: 2,
    Sarcasmul: 1,

    // ÎNTREBAREA 5 - Prieten
    "Îți gătește prăjituri": 2,
    "Te provoacă cu umor": 1,
    "Îți aduce aventură": 3,
    "Îți oferă confort": 2,
    "Te încurajează să riști": 2,
    "Te ia peste picior cu glume": 1,
  },

  Pompompurin: {
    // ÎNTREBAREA 1 - Culoare
    Roz: 1,
    Negru: 1,
    Alb: 2,
    Galben: 3,
    Verde: 2,
    Albastru: 1,

    // ÎNTREBAREA 2 - Activitate
    Gătitul: 2,
    Petrecerea: 1,
    Visatul: 2,
    Relaxarea: 3,
    Aventura: 1,
    "Ieșitul în oraș": 1,

    // ÎNTREBAREA 3 - Mediu
    "Casă primitoare": 2,
    "Oraș gotic": 1,
    "Vârf de munte": 2,
    Bibliotecă: 3,
    "Parc verde": 1,
    "Cafenea locală": 1,

    // ÎNTREBAREA 4 - Trăsătură
    Blândețe: 2,
    Rebeliunea: 1,
    Delicatețea: 2,
    Calmul: 3,
    Optimismul: 1,
    Sarcasmul: 1,

    // ÎNTREBAREA 5 - Prieten
    "Îți gătește prăjituri": 2,
    "Te provoacă cu umor": 1,
    "Îți aduce aventură": 2,
    "Îți oferă confort": 3,
    "Te încurajează să riști": 1,
    "Te ia peste picior cu glume": 1,
  },

  Keroppi: {
    // ÎNTREBAREA 1 - Culoare
    Roz: 1,
    Negru: 1,
    Alb: 2,
    Galben: 2,
    Verde: 3,
    Albastru: 2,

    // ÎNTREBAREA 2 - Activitate
    Gătitul: 1,
    Petrecerea: 2,
    Visatul: 2,
    Relaxarea: 1,
    Aventura: 3,
    "Ieșitul în oraș": 1,

    // ÎNTREBAREA 3 - Mediu
    "Casă primitoare": 1,
    "Oraș gotic": 1,
    "Vârf de munte": 2,
    Bibliotecă: 1,
    "Parc verde": 3,
    "Cafenea locală": 2,

    // ÎNTREBAREA 4 - Trăsătură
    Blândețea: 2,
    Rebeliunea: 1,
    Delicatețea: 2,
    Calmul: 1,
    Optimismul: 3,
    Sarcasmul: 1,

    // ÎNTREBAREA 5 - Prieten
    "Îți gătește prăjituri": 1,
    "Te provoacă cu umor": 2,
    "Îți aduce aventură": 2,
    "Îți oferă confort": 1,
    "Te încurajează să riști": 3,
    "Te ia peste picior cu glume": 1,
  },

  "Badtz-Maru": {
    // ÎNTREBAREA 1 - Culoare
    Roz: 1,
    Negru: 2,
    Alb: 1,
    Galben: 1,
    Verde: 1,
    Albastru: 3,

    // ÎNTREBAREA 2 - Activitate
    Gătitul: 1,
    Petrecerea: 2,
    Visatul: 1,
    Relaxarea: 1,
    Aventura: 2,
    "Ieșitul în oraș": 3,

    // ÎNTREBAREA 3 - Mediu
    "Casă primitoare": 1,
    "Oraș gotic": 2,
    "Vârf de munte": 1,
    Bibliotecă: 1,
    "Parc verde": 2,
    "Cafenea locală": 3,

    // ÎNTREBAREA 4 - Trăsătură
    Blândețea: 1,
    Rebeliunea: 2,
    Delicatețea: 1,
    Calmul: 1,
    Optimismul: 2,
    Sarcasmul: 3,

    // ÎNTREBAREA 5 - Prieten
    "Îți gătește prăjituri": 1,
    "Te provoacă cu umor": 2,
    "Îți aduce aventură": 1,
    "Îți oferă confort": 1,
    "Te încurajează să riști": 2,
    "Te ia peste picior cu glume": 3,
  },
};

const results = {
  "Hello Kitty": {
    title: "Hello Kitty 🌸",
    description: "Ești prietenoasă, caldă și mereu gata să ajuți pe ceilalți.",
  },
  Kuromi: {
    title: "Kuromi 🖤",
    description: "Ai un spirit rebel și îți place să fii diferit!",
  },
  Cinnamoroll: {
    title: "Cinnamoroll ☁️",
    description: "Ești visător și îți place să trăiești printre nori.",
  },
  Pompompurin: {
    title: "Pompompurin 🍮",
    description: "Iubești confortul și momentele cozy.",
  },
  Keroppi: {
    title: "Keroppi 🐸",
    description: "Optimist și plin de energie, aduci veselie în jurul tău.",
  },
  "Badtz-Maru": {
    title: "Badtz-Maru 🐧",
    description: "Sarcasmul, ai mereu o replică pregătită.",
  },
};
---

<Layout>
  <div class="quiz-container">
    <div class="progress-bar">
      <div class="progress-fill" id="progress"></div>
    </div>
    <div class="question" id="question"></div>
    <div class="options" id="options"></div>
    <div class="result" id="result" style="display: none;">
      <div class="result-title" id="result-title"></div>
      <div class="result-description" id="result-description"></div>
      <button onclick="restartQuiz()" class="restart-btn"
        >Încearcă din nou</button
      >
    </div>
  </div>
  <div class="kitty-wrapper">
    <img src="/media/elemente/kitty.svg" alt="" />
    <a href="/home_page" class="buton">Site-ul ghidului &lt3</a>
  </div>
</Layout>

<style>
  .quiz-container {
    font-family: var(--font-h1);

    /* background: linear-gradient(135deg, #ffb6c1, #ffc0cb); */
    /* background-color: rgb(223 163 179); */
    /* background-image: url(../../public/media/elemente/noise-tile-dark.svg);
    background-size: 1000px 1000px; */
    background-repeat: repeat;

    padding: 2rem;
    border-radius: 20px;
    /* max-width: 800px; */
    text-align: center;
    margin: 2rem auto;
    margin-bottom: 0;
    position: relative;
  }

  .progress-bar {
    background: rgb(255, 255, 255);
    height: 12px;
    border-radius: 6px;
    margin-bottom: 2rem;
    overflow: hidden;
    border: 2px solid rgba(255, 255, 255, 0.9);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .progress-fill {
    background: linear-gradient(90deg, hsl(211, 100%, 54%), hsl(211, 90%, 66%));
    height: 100%;
    transition: width 0.8s ease;
    border-radius: 4px;
    /* box-shadow: 0 2px 8px rgba(255, 20, 147, 0.3); */
  }

  .question {
    font-size: clamp(1.8em, calc(0.9em + 5vw), 2em);
    font-weight: bold;
    margin-bottom: 2rem;
    color: #fff;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  #options {
    margin: 1rem 0;
    margin-bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: 0.8rem;

    button {
      display: flex;
      align-items: center;
      justify-content: center;

      flex: 1 1 180px;
      background: hsl(344, 68%, 76%);
      max-width: 8em;
      height: 7em;
      color: white;

      border: none;
      padding: 0.8rem 1.5rem;
      border-radius: 25px;
      cursor: pointer;

      font-size: clamp(0.9em, calc(0.5em + 2vw), 1.3em);
      font-weight: bold;
      text-align: center;
      transition: all 0.3s ease-in-out;
    }

    button:hover {
      background: hsl(211, 58%, 56%);
      transform: translateY(-2px);
    }
  }

  .result {
    background: rgba(255, 255, 255, 0.95);
    padding: 2rem;
    border-radius: 15px;
    margin-top: 1rem;
  }

  .result-title {
    font-size: clamp(1.8em, calc(0.9em + 5vw), 3em);
    font-weight: bold;
    margin-bottom: 1rem;
    color: hsl(344, 68%, 76%);
  }

  .result-description {
    font-size: 1.3rem;
    margin-bottom: 2rem;
    color: #666;
    line-height: 1.5;
  }

  .restart-btn {
    background: rgb(58 92 128);
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 25px;
    cursor: pointer;
    font-size: 1.4rem;
    font-weight: bold;
    transition: all 0.3s;
  }

  .restart-btn:hover {
    background: hsl(211, 58%, 56%);
    transform: translateY(-2px);
  }

  .inapoi-wrapper {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 1em;
    padding: 0 1em;

    img {
      width: clamp(8em, calc(10vw + 2em), 6em);
      flex-grow: 1;
      transform: rotate(-30deg);
      filter: drop-shadow(0 0 40px rgba(214, 157, 167, 0.364));
      transition: transform 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    }

    a {
      flex-grow: 1;
    }

    .buton {
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: clamp(1.5em, calc(1em + 1vw), 16em);
      text-align: center;
      /* min-height: 10rem; */
      /* padding: 0.75rem 1.5rem; */
      background-color: rgb(47, 93, 131);
      border: 3px solid rgb(214, 157, 167);
      border-radius: 1em;

      color: hsl(349, 70%, 90%);
      text-decoration: none;
      font-family: var(--font-h1);
      font-weight: 500;

      transition: all 0.3s ease;
    }

    .buton:hover {
      transform: scale(1.05);
      box-shadow:
        0 0 20px rgba(131, 233, 240, 0.6),
        0 0 60px rgba(131, 232, 240, 0.4);
    }
  }
</style>
<script>
  document.addEventListener("astro:page-load", () => {
    const btn = document.querySelector(".kitty-wrapper .buton");
    const img = document.querySelector(
      ".kitty-wrapper img"
    ) as HTMLImageElement | null;

    if (btn && img) {
      btn.addEventListener("mouseenter", () => {
        img.style.transform = "rotate(-50deg) scale(1.1)";
      });

      btn.addEventListener("mouseleave", () => {
        img.style.transform = "rotate(-30deg) scale(1)";
      });
    }
  });
</script>
<script is:inline define:vars={{ questions, personalityScores, results }}>
  document.addEventListener("astro:page-load", () => {
    const questionEl = document.getElementById("question");
    const optionsEl = document.getElementById("options");
    const resultEl = document.getElementById("result");
    const resultTitleEl = document.getElementById("result-title");
    const resultDescriptionEl = document.getElementById("result-description");
    const progressEl = document.getElementById("progress");

    let currentQuestion = 0;
    const answers = [];

    function updateProgress() {
      const percentage = (currentQuestion / questions.length) * 100;
      progressEl.style.width = percentage + "%";
    }

    function showQuestion() {
      if (currentQuestion >= questions.length) {
        showResult();
        return;
      }

      updateProgress();
      const q = questions[currentQuestion];
      questionEl.textContent = `${currentQuestion + 1}. ${q.text}`;

      optionsEl.innerHTML = "";
      q.options.forEach((opt) => {
        const btn = document.createElement("button");
        btn.textContent = opt;
        btn.onclick = () => {
          answers.push(opt);
          currentQuestion++;
          showQuestion();
        };
        optionsEl.appendChild(btn);
      });
    }

    function showResult() {
      // Calculează scorurile pentru fiecare personalitate
      const scores = {};
      for (const personality in personalityScores) {
        scores[personality] = 0;
        answers.forEach((answer) => {
          const score = personalityScores[personality][answer];
          if (score !== undefined) {
            scores[personality] += score;
          } else {
            console.warn(`Missing score for ${personality} - ${answer}`);
          }
        });
      }

      // Găsește personalitatea cu cel mai mare scor
      let maxScore = 0;
      let winningPersonality = "Hello Kitty";
      for (const personality in scores) {
        if (scores[personality] > maxScore) {
          maxScore = scores[personality];
          winningPersonality = personality;
        }
      }

      // Afișează rezultatul
      const result = results[winningPersonality];
      resultTitleEl.textContent = result.title;
      resultDescriptionEl.textContent = result.description;

      // Ascunde întrebările și afișează rezultatul
      questionEl.style.display = "none";
      optionsEl.style.display = "none";
      resultEl.style.display = "block";
      progressEl.style.width = "100%";

      console.log("Răspunsuri:", answers);
      console.log("Scoruri:", scores);
      console.log("Câștigător:", winningPersonality);
    }

    function restartQuiz() {
      currentQuestion = 0;
      answers.length = 0;
      questionEl.style.display = "block";
      optionsEl.style.display = "flex";
      resultEl.style.display = "none";
      showQuestion();
    }

    // Expune funcția global pentru butonul de restart
    window.restartQuiz = restartQuiz;

    showQuestion();
  });
</script>
